snippet ifmain
if __name__=="__main__":
	$1
$0
endsnippet

snippet class
class $1:
	def __init__(self$2):
		$3
	$0
endsnippet

snippet supcls
class $1($2):
	def __init__(self$3):
		super($1, self).__init__()
		$4
	$0
endsnippet

snippet def
def $1($2):
	$3

$0	
endsnippet

snippet clsdef
def $1(self$2):
	$3

$0
endsnippet

snippet impnn
import torch
import torch.nn as nn
import torch.nn.functional as F

$0
endsnippet

snippet nnmod
class $1(nn.Module):
	def __init__(self$2):
		super($1, self).__init__()
		$3
	
	def forward(self, x):
		$4

$0
endsnippet

snippet if
if $1:
	$2
$0
endsnippet


snippet ifelse
if $1:
	$2
else:
	$3
$0
endsnippet


snippet elif
elif $1:
	$2
$0
endsnippet

# honza/vim-snippets
#! header
snippet #! "#!/usr/bin/env python" b
#!/usr/bin/env python
$0
endsnippet

snippet with "with" b
with ${1:expr}`!p snip.rv = " as " if t[2] else ""`${2:var}:
	${3:${VISUAL:pass}}
$0
endsnippet

snippet for "for loop" b
for ${1:item} in ${2:iterable}:
	${3:${VISUAL:pass}}
endsnippet

snippet try "Try / Except" b
try:
	${1:${VISUAL:pass}}
except ${2:Exception} as ${3:e}:
	${4:raise $3}
endsnippet

snippet trye "Try / Except / Else" b
try:
	${1:${VISUAL:pass}}
except ${2:Exception} as ${3:e}:
	${4:raise $3}
else:
	${5:pass}
endsnippet

snippet tryf "Try / Except / Finally" b
try:
	${1:${VISUAL:pass}}
except ${2:Exception} as ${3:e}:
	${4:raise $3}
finally:
	${5:pass}
endsnippet

snippet tryef "Try / Except / Else / Finally" b
try:
	${1:${VISUAL:pass}}
except${2: ${3:Exception} as ${4:e}}:
	${5:raise}
else:
	${6:pass}
finally:
	${7:pass}
endsnippet

